<Application x:Class="Monitor.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		     xmlns:local="clr-namespace:Monitor"
             xmlns:RadialMenu="clr-namespace:RadialMenu.Controls;assembly=RadialMenu"
             xmlns:WPFSpark="clr-namespace:WPFSpark;assembly=WPFSpark"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <ResourceDictionary>
            <!--.Net4.5以下时，↓此部分必须注释-->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Teal.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Red.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <!--.Net4.5以下时，↑此部分必须注释-->
            
            <!--Foreground-->
            <SolidColorBrush x:Key="Foreground" Color="#FFFFFF"/>

            <!--General-->
            <SolidColorBrush x:Key="BackgroundHighlighted" Color="#54545C"/>
            <SolidColorBrush x:Key="BorderBrushHighlighted" Color="#6A6A75"/>
            <SolidColorBrush x:Key="BackgroundSelected" Color="#007ACC"/>
            <SolidColorBrush x:Key="BorderBrushSelected" Color="#1C97EA"/>
            <SolidColorBrush x:Key="BackgroundNormal" Color="#3F3F46"/>
            <SolidColorBrush x:Key="BorderBrushNormal" Color="#54545C"/>
            <Style x:Key="LabelButton" TargetType="Label">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="SeaGreen"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="RadioButtonStyle" TargetType="RadioButton">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Button Content="{TemplateBinding Content}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="70" BorderBrush="{TemplateBinding BorderBrush}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="RadioLableStyle" TargetType="RadioButton">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Label Content="{TemplateBinding Content}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="90" HorizontalContentAlignment="Center" Background="{TemplateBinding Background}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter Property="Background" Value="#55d3d3d3"/>
                    </Trigger> 
                </Style.Triggers>
            </Style>
            <Style x:Key="StandardButton" TargetType="Button">
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
                <Setter Property="Background" Value="{StaticResource BackgroundNormal}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushNormal}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border SnapsToDevicePixels="True"
				            BorderThickness="1"
				            BorderBrush="{TemplateBinding BorderBrush}" 
				            Background="{TemplateBinding Background}">
                                <Grid SnapsToDevicePixels="True">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHighlighted}" />
                                    <Setter Property="Background" Value="{StaticResource BackgroundHighlighted}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource BackgroundSelected}"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSelected}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value=".5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border
                                  Name="Border"
                                    Padding="5"
                                    Margin="2"
                                    BorderThickness="2"
                                    CornerRadius="0"
                                    Background="Transparent"
                                    BorderBrush="Transparent">

                                <TextBlock TextAlignment="Center">
                                        <ContentPresenter />
                                </TextBlock>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Gray"/>
                                    <Setter TargetName="Border" Property="Background" Value="Yellow"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="32" />
                                </Grid.ColumnDefinitions>
                                <Border
                          x:Name="Border"
                          Grid.ColumnSpan="2"
                          CornerRadius="0"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="2" />
                                <Border
                          Grid.Column="0"
                          CornerRadius="0"
                          Background="Transparent"
                          BorderBrush="Transparent"
                          BorderThickness="10" />
                                <Path
                          x:Name="Arrow"
                          Grid.Column="1"    
                          Fill="{TemplateBinding Foreground}"
                          Stroke="{TemplateBinding Foreground}"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 8 12 L 16 0 Z"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                                    <Setter Property="Foreground" Value="Gray"/>
                                    <Setter TargetName="Arrow" Property="Fill" Value="Gray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
                <Border x:Name="PART_ContentHost" Focusable="True" />
            </ControlTemplate>
            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="BorderBrush" Value="Gray" />
                <Setter Property="Background" Value="White" />
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="MinWidth" Value="50"/>
                <Setter Property="MinHeight" Value="32"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <ToggleButton
                                Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding BorderBrush}"
                                Style="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                                </ToggleButton>
                                <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,3,30,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" />
                                <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                Template="{StaticResource ComboBoxTextBox}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="3,3,23,3"
                                Focusable="True"                               
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                                    <Grid
                                  Name="DropDown"
                                  SnapsToDevicePixels="True"               
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border
                                        x:Name="DropDownBorder"
                                        Background="White"
                                        BorderThickness="2"
                                        BorderBrush="Gray"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </Trigger>
                                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                    <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                    <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                                </Trigger>
                                <Trigger Property="IsEditable" Value="true">
                                    <Setter Property="IsTabStop" Value="false"/>
                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                                    <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                </Style.Triggers>
            </Style>
            <Style x:Key="NumTbStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping" Value="NoWrap"/>
                <Setter Property="TextTrimming" Value="None"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Width" Value="40"/>
                <Setter Property="FontSize" Value="14"/>
            </Style>
            <ControlTemplate x:Key="ImageButtonTemplate" TargetType="{x:Type local:ImageButton}">
                <Grid>
                    <Rectangle x:Name="bgrect">
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="{Binding ImgPath, RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill" Viewbox="0,0,0.25,1" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <Label Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" HorizontalContentAlignment="Center" FontSize="14"></Label>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="bgrect" Property="Fill">
                            <Setter.Value>
                                <ImageBrush ImageSource="{Binding ImgPath, RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill" Viewbox="0.25,0,0.25,1" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter TargetName="bgrect" Property="Fill">
                            <Setter.Value>
                                <ImageBrush ImageSource="{Binding ImgPath, RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill" Viewbox="0.5,0,0.25,1" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="bgrect" Property="Fill">
                            <Setter.Value>
                                <ImageBrush ImageSource="{Binding ImgPath, RelativeSource={RelativeSource TemplatedParent}}" Stretch="UniformToFill" Viewbox="0.75,0,0.25,1" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="SelfMenuItemTemplate" TargetType="{x:Type MenuItem}">
                <Border Background="Transparent"  Height="25">
                    <StackPanel Orientation="Horizontal">
                        <Rectangle Width="5" Height="25" x:Name="mousemark" Fill="Gray" />
                        <TextBlock Margin="5,0" VerticalAlignment="Center" Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </StackPanel>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="mousemark" Property="Fill" Value="Red" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="FancyRadialMenuCentralItem" TargetType="RadialMenu:RadialMenuCentralItem" BasedOn="{StaticResource {x:Type RadialMenu:RadialMenuCentralItem}}">

                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="LightSeaGreen"/>
                <Setter Property="BorderThickness" Value="4"/>
                <Setter Property="Width" Value="48"/>
                <Setter Property="Height" Value="48"/>

            </Style>

            <Style x:Key="FancyRadialMenuItem" TargetType="RadialMenu:RadialMenuItem" BasedOn="{StaticResource {x:Type RadialMenu:RadialMenuItem}}">

                <Setter Property="Background" Value="Wheat"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="InnerRadius" Value="30"/>
                <Setter Property="OuterRadius" Value="113"/>
                <Setter Property="ContentRadius" Value="63"/>

                <Setter Property="EdgeBackground" Value="LightSeaGreen"/>
                <Setter Property="EdgePadding" Value="4"/>
                <Setter Property="EdgeInnerRadius" Value="100"/>
                <Setter Property="EdgeOuterRadius" Value="110"/>

                <Setter Property="ArrowBackground" Value="Wheat"/>
                <Setter Property="ArrowRadius" Value="105"/>

            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
